/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/apps/ecommerce/catalog/save-product.js":
/*!********************************************************************************!*\
  !*** ./resources/assets/core/js/custom/apps/ecommerce/catalog/save-product.js ***!
  \********************************************************************************/
/***/ (() => {

eval("\n\n// Class definition\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar KTAppEcommerceSaveProduct = function () {\n  // Private functions\n\n  // Init quill editor\n  var initQuill = function initQuill() {\n    // Define all elements for quill editor\n    var elements = ['#kt_ecommerce_add_product_description', '#kt_ecommerce_add_product_meta_description'];\n\n    // Loop all elements\n    elements.forEach(function (element) {\n      // Get quill element\n      var quill = document.querySelector(element);\n\n      // Break if element not found\n      if (!quill) {\n        return;\n      }\n\n      // Init quill --- more info: https://quilljs.com/docs/quickstart/\n      quill = new Quill(element, {\n        modules: {\n          toolbar: [[{\n            header: [1, 2, false]\n          }], ['bold', 'italic', 'underline'], ['image', 'code-block']]\n        },\n        placeholder: 'Type your text here...',\n        theme: 'snow' // or 'bubble'\n      });\n    });\n  };\n\n  // Init tagify\n  var initTagify = function initTagify() {\n    // Define all elements for tagify\n    var elements = ['#kt_ecommerce_add_product_category', '#kt_ecommerce_add_product_tags'];\n\n    // Loop all elements\n    elements.forEach(function (element) {\n      // Get tagify element\n      var tagify = document.querySelector(element);\n\n      // Break if element not found\n      if (!tagify) {\n        return;\n      }\n\n      // Init tagify --- more info: https://yaireo.github.io/tagify/\n      new Tagify(tagify, {\n        whitelist: [\"new\", \"trending\", \"sale\", \"discounted\", \"selling fast\", \"last 10\"],\n        dropdown: {\n          maxItems: 20,\n          // <- mixumum allowed rendered suggestions\n          classname: \"tagify__inline__suggestions\",\n          // <- custom classname for this dropdown, so it could be targeted\n          enabled: 0,\n          // <- show suggestions on focus\n          closeOnSelect: false // <- do not hide the suggestions dropdown once an item has been selected\n        }\n      });\n    });\n  };\n\n  // Init form repeater --- more info: https://github.com/DubFriend/jquery.repeater\n  var initFormRepeater = function initFormRepeater() {\n    $('#kt_ecommerce_add_product_options').repeater({\n      initEmpty: false,\n      defaultValues: {\n        'text-input': 'foo'\n      },\n      show: function show() {\n        $(this).slideDown();\n\n        // Init select2 on new repeated items\n        initConditionsSelect2();\n      },\n      hide: function hide(deleteElement) {\n        $(this).slideUp(deleteElement);\n      }\n    });\n  };\n\n  // Init condition select2\n  var initConditionsSelect2 = function initConditionsSelect2() {\n    // Tnit new repeating condition types\n    var allConditionTypes = document.querySelectorAll('[data-kt-ecommerce-catalog-add-product=\"product_option\"]');\n    allConditionTypes.forEach(function (type) {\n      if ($(type).hasClass(\"select2-hidden-accessible\")) {\n        return;\n      } else {\n        $(type).select2({\n          minimumResultsForSearch: -1\n        });\n      }\n    });\n  };\n\n  // Init noUIslider\n  var initSlider = function initSlider() {\n    var slider = document.querySelector(\"#kt_ecommerce_add_product_discount_slider\");\n    var value = document.querySelector(\"#kt_ecommerce_add_product_discount_label\");\n    noUiSlider.create(slider, {\n      start: [10],\n      connect: true,\n      range: {\n        \"min\": 1,\n        \"max\": 100\n      }\n    });\n    slider.noUiSlider.on(\"update\", function (values, handle) {\n      value.innerHTML = Math.round(values[handle]);\n      if (handle) {\n        value.innerHTML = Math.round(values[handle]);\n      }\n    });\n  };\n\n  // Init DropzoneJS --- more info:\n  var initDropzone = function initDropzone() {\n    var myDropzone = new Dropzone(\"#kt_ecommerce_add_product_media\", {\n      url: \"https://keenthemes.com/scripts/void.php\",\n      // Set the url for your upload script location\n      paramName: \"file\",\n      // The name that will be used to transfer the file\n      maxFiles: 10,\n      maxFilesize: 10,\n      // MB\n      addRemoveLinks: true,\n      accept: function accept(file, done) {\n        if (file.name == \"wow.jpg\") {\n          done(\"Naha, you don't.\");\n        } else {\n          done();\n        }\n      }\n    });\n  };\n\n  // Handle discount options\n  var handleDiscount = function handleDiscount() {\n    var discountOptions = document.querySelectorAll('input[name=\"discount_option\"]');\n    var percentageEl = document.getElementById('kt_ecommerce_add_product_discount_percentage');\n    var fixedEl = document.getElementById('kt_ecommerce_add_product_discount_fixed');\n    discountOptions.forEach(function (option) {\n      option.addEventListener('change', function (e) {\n        var value = e.target.value;\n        switch (value) {\n          case '2':\n            {\n              percentageEl.classList.remove('d-none');\n              fixedEl.classList.add('d-none');\n              break;\n            }\n          case '3':\n            {\n              percentageEl.classList.add('d-none');\n              fixedEl.classList.remove('d-none');\n              break;\n            }\n          default:\n            {\n              percentageEl.classList.add('d-none');\n              fixedEl.classList.add('d-none');\n              break;\n            }\n        }\n      });\n    });\n  };\n\n  // Shipping option handler\n  var handleShipping = function handleShipping() {\n    var shippingOption = document.getElementById('kt_ecommerce_add_product_shipping_checkbox');\n    var shippingForm = document.getElementById('kt_ecommerce_add_product_shipping');\n    shippingOption.addEventListener('change', function (e) {\n      var value = e.target.checked;\n      if (value) {\n        shippingForm.classList.remove('d-none');\n      } else {\n        shippingForm.classList.add('d-none');\n      }\n    });\n  };\n\n  // Category status handler\n  var handleStatus = function handleStatus() {\n    var target = document.getElementById('kt_ecommerce_add_product_status');\n    var select = document.getElementById('kt_ecommerce_add_product_status_select');\n    var statusClasses = ['bg-success', 'bg-warning', 'bg-danger'];\n    $(select).on('change', function (e) {\n      var value = e.target.value;\n      switch (value) {\n        case \"published\":\n          {\n            var _target$classList;\n            (_target$classList = target.classList).remove.apply(_target$classList, statusClasses);\n            target.classList.add('bg-success');\n            hideDatepicker();\n            break;\n          }\n        case \"scheduled\":\n          {\n            var _target$classList2;\n            (_target$classList2 = target.classList).remove.apply(_target$classList2, statusClasses);\n            target.classList.add('bg-warning');\n            showDatepicker();\n            break;\n          }\n        case \"inactive\":\n          {\n            var _target$classList3;\n            (_target$classList3 = target.classList).remove.apply(_target$classList3, statusClasses);\n            target.classList.add('bg-danger');\n            hideDatepicker();\n            break;\n          }\n        case \"draft\":\n          {\n            var _target$classList4;\n            (_target$classList4 = target.classList).remove.apply(_target$classList4, statusClasses);\n            target.classList.add('bg-primary');\n            hideDatepicker();\n            break;\n          }\n        default:\n          break;\n      }\n    });\n\n    // Handle datepicker\n    var datepicker = document.getElementById('kt_ecommerce_add_product_status_datepicker');\n\n    // Init flatpickr --- more info: https://flatpickr.js.org/\n    $('#kt_ecommerce_add_product_status_datepicker').flatpickr({\n      enableTime: true,\n      dateFormat: \"Y-m-d H:i\"\n    });\n    var showDatepicker = function showDatepicker() {\n      datepicker.parentNode.classList.remove('d-none');\n    };\n    var hideDatepicker = function hideDatepicker() {\n      datepicker.parentNode.classList.add('d-none');\n    };\n  };\n\n  // Condition type handler\n  var handleConditions = function handleConditions() {\n    var allConditions = document.querySelectorAll('[name=\"method\"][type=\"radio\"]');\n    var conditionMatch = document.querySelector('[data-kt-ecommerce-catalog-add-category=\"auto-options\"]');\n    allConditions.forEach(function (radio) {\n      radio.addEventListener('change', function (e) {\n        if (e.target.value === '1') {\n          conditionMatch.classList.remove('d-none');\n        } else {\n          conditionMatch.classList.add('d-none');\n        }\n      });\n    });\n  };\n\n  // Submit form handler\n  var handleSubmit = function handleSubmit() {\n    // Define variables\n    var validator;\n\n    // Get elements\n    var form = document.getElementById('kt_ecommerce_add_product_form');\n    var submitButton = document.getElementById('kt_ecommerce_add_product_submit');\n\n    // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n    validator = FormValidation.formValidation(form, {\n      fields: _defineProperty(_defineProperty(_defineProperty(_defineProperty({\n        'product_name': {\n          validators: {\n            notEmpty: {\n              message: 'Product name is required'\n            }\n          }\n        },\n        'sku': {\n          validators: {\n            notEmpty: {\n              message: 'SKU is required'\n            }\n          }\n        }\n      }, \"sku\", {\n        validators: {\n          notEmpty: {\n            message: 'Product barcode is required'\n          }\n        }\n      }), 'shelf', {\n        validators: {\n          notEmpty: {\n            message: 'Shelf quantity is required'\n          }\n        }\n      }), 'price', {\n        validators: {\n          notEmpty: {\n            message: 'Product base price is required'\n          }\n        }\n      }), 'tax', {\n        validators: {\n          notEmpty: {\n            message: 'Product tax class is required'\n          }\n        }\n      }),\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap: new FormValidation.plugins.Bootstrap5({\n          rowSelector: '.fv-row',\n          eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    });\n\n    // Handle submit button\n    submitButton.addEventListener('click', function (e) {\n      e.preventDefault();\n\n      // Validate form before submit\n      if (validator) {\n        validator.validate().then(function (status) {\n          console.log('validated!');\n          if (status == 'Valid') {\n            submitButton.setAttribute('data-kt-indicator', 'on');\n\n            // Disable submit button whilst loading\n            submitButton.disabled = true;\n            setTimeout(function () {\n              submitButton.removeAttribute('data-kt-indicator');\n              Swal.fire({\n                text: \"Form has been successfully submitted!\",\n                icon: \"success\",\n                buttonsStyling: false,\n                confirmButtonText: \"Ok, got it!\",\n                customClass: {\n                  confirmButton: \"btn btn-primary\"\n                }\n              }).then(function (result) {\n                if (result.isConfirmed) {\n                  // Enable submit button after loading\n                  submitButton.disabled = false;\n\n                  // Redirect to customers list page\n                  window.location = form.getAttribute(\"data-kt-redirect\");\n                }\n              });\n            }, 2000);\n          } else {\n            Swal.fire({\n              html: \"Sorry, looks like there are some errors detected, please try again. <br/><br/>Please note that there may be errors in the <strong>General</strong> or <strong>Advanced</strong> tabs\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn btn-primary\"\n              }\n            });\n          }\n        });\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      // Init forms\n      initQuill();\n      initTagify();\n      initSlider();\n      initFormRepeater();\n      initDropzone();\n      initConditionsSelect2();\n\n      // Handle forms\n      handleStatus();\n      handleConditions();\n      handleDiscount();\n      handleShipping();\n      handleSubmit();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTAppEcommerceSaveProduct.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2FwcHMvZWNvbW1lcmNlL2NhdGFsb2cvc2F2ZS1wcm9kdWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQUEsU0FBQUEsUUFBQUMsQ0FBQSxzQ0FBQUQsT0FBQSx3QkFBQUUsTUFBQSx1QkFBQUEsTUFBQSxDQUFBQyxRQUFBLGFBQUFGLENBQUEsa0JBQUFBLENBQUEsZ0JBQUFBLENBQUEsV0FBQUEsQ0FBQSx5QkFBQUMsTUFBQSxJQUFBRCxDQUFBLENBQUFHLFdBQUEsS0FBQUYsTUFBQSxJQUFBRCxDQUFBLEtBQUFDLE1BQUEsQ0FBQUcsU0FBQSxxQkFBQUosQ0FBQSxLQUFBRCxPQUFBLENBQUFDLENBQUE7QUFBQSxTQUFBSyxnQkFBQUMsQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsWUFBQUQsQ0FBQSxHQUFBRSxjQUFBLENBQUFGLENBQUEsTUFBQUQsQ0FBQSxHQUFBSSxNQUFBLENBQUFDLGNBQUEsQ0FBQUwsQ0FBQSxFQUFBQyxDQUFBLElBQUFLLEtBQUEsRUFBQUosQ0FBQSxFQUFBSyxVQUFBLE1BQUFDLFlBQUEsTUFBQUMsUUFBQSxVQUFBVCxDQUFBLENBQUFDLENBQUEsSUFBQUMsQ0FBQSxFQUFBRixDQUFBO0FBQUEsU0FBQUcsZUFBQUQsQ0FBQSxRQUFBUSxDQUFBLEdBQUFDLFlBQUEsQ0FBQVQsQ0FBQSxnQ0FBQVQsT0FBQSxDQUFBaUIsQ0FBQSxJQUFBQSxDQUFBLEdBQUFBLENBQUE7QUFBQSxTQUFBQyxhQUFBVCxDQUFBLEVBQUFELENBQUEsb0JBQUFSLE9BQUEsQ0FBQVMsQ0FBQSxNQUFBQSxDQUFBLFNBQUFBLENBQUEsTUFBQUYsQ0FBQSxHQUFBRSxDQUFBLENBQUFQLE1BQUEsQ0FBQWlCLFdBQUEsa0JBQUFaLENBQUEsUUFBQVUsQ0FBQSxHQUFBVixDQUFBLENBQUFhLElBQUEsQ0FBQVgsQ0FBQSxFQUFBRCxDQUFBLGdDQUFBUixPQUFBLENBQUFpQixDQUFBLFVBQUFBLENB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YnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2FwcHMvZWNvbW1lcmNlL2NhdGFsb2cvc2F2ZS1wcm9kdWN0LmpzP2YxMmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4vLyBDbGFzcyBkZWZpbml0aW9uXHJcbnZhciBLVEFwcEVjb21tZXJjZVNhdmVQcm9kdWN0ID0gZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIC8vIFByaXZhdGUgZnVuY3Rpb25zXHJcblxyXG4gICAgLy8gSW5pdCBxdWlsbCBlZGl0b3JcclxuICAgIGNvbnN0IGluaXRRdWlsbCA9ICgpID0+IHtcclxuICAgICAgICAvLyBEZWZpbmUgYWxsIGVsZW1lbnRzIGZvciBxdWlsbCBlZGl0b3JcclxuICAgICAgICBjb25zdCBlbGVtZW50cyA9IFtcclxuICAgICAgICAgICAgJyNrdF9lY29tbWVyY2VfYWRkX3Byb2R1Y3RfZGVzY3JpcHRpb24nLFxyXG4gICAgICAgICAgICAnI2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9tZXRhX2Rlc2NyaXB0aW9uJ1xyXG4gICAgICAgIF07XHJcblxyXG4gICAgICAgIC8vIExvb3AgYWxsIGVsZW1lbnRzXHJcbiAgICAgICAgZWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgICAgLy8gR2V0IHF1aWxsIGVsZW1lbnRcclxuICAgICAgICAgICAgbGV0IHF1aWxsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlbGVtZW50KTtcclxuXHJcbiAgICAgICAgICAgIC8vIEJyZWFrIGlmIGVsZW1lbnQgbm90IGZvdW5kXHJcbiAgICAgICAgICAgIGlmICghcXVpbGwpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gSW5pdCBxdWlsbCAtLS0gbW9yZSBpbmZvOiBodHRwczovL3F1aWxsanMuY29tL2RvY3MvcXVpY2tzdGFydC9cclxuICAgICAgICAgICAgcXVpbGwgPSBuZXcgUXVpbGwoZWxlbWVudCwge1xyXG4gICAgICAgICAgICAgICAgbW9kdWxlczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHRvb2xiYXI6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAgW3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcjogWzEsIDIsIGZhbHNlXVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgWydib2xkJywgJ2l0YWxpYycsICd1bmRlcmxpbmUnXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgWydpbWFnZScsICdjb2RlLWJsb2NrJ11cclxuICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICdUeXBlIHlvdXIgdGV4dCBoZXJlLi4uJyxcclxuICAgICAgICAgICAgICAgIHRoZW1lOiAnc25vdycgLy8gb3IgJ2J1YmJsZSdcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gSW5pdCB0YWdpZnlcclxuICAgIGNvbnN0IGluaXRUYWdpZnkgPSAoKSA9PiB7XHJcbiAgICAgICAgLy8gRGVmaW5lIGFsbCBlbGVtZW50cyBmb3IgdGFnaWZ5XHJcbiAgICAgICAgY29uc3QgZWxlbWVudHMgPSBbXHJcbiAgICAgICAgICAgICcja3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X2NhdGVnb3J5JyxcclxuICAgICAgICAgICAgJyNrdF9lY29tbWVyY2VfYWRkX3Byb2R1Y3RfdGFncydcclxuICAgICAgICBdO1xyXG5cclxuICAgICAgICAvLyBMb29wIGFsbCBlbGVtZW50c1xyXG4gICAgICAgIGVsZW1lbnRzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgIC8vIEdldCB0YWdpZnkgZWxlbWVudFxyXG4gICAgICAgICAgICBjb25zdCB0YWdpZnkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVsZW1lbnQpO1xyXG5cclxuICAgICAgICAgICAgLy8gQnJlYWsgaWYgZWxlbWVudCBub3QgZm91bmRcclxuICAgICAgICAgICAgaWYgKCF0YWdpZnkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gSW5pdCB0YWdpZnkgLS0tIG1vcmUgaW5mbzogaHR0cHM6Ly95YWlyZW8uZ2l0aHViLmlvL3RhZ2lmeS9cclxuICAgICAgICAgICAgbmV3IFRhZ2lmeSh0YWdpZnksIHtcclxuICAgICAgICAgICAgICAgIHdoaXRlbGlzdDogW1wibmV3XCIsIFwidHJlbmRpbmdcIiwgXCJzYWxlXCIsIFwiZGlzY291bnRlZFwiLCBcInNlbGxpbmcgZmFzdFwiLCBcImxhc3QgMTBcIl0sXHJcbiAgICAgICAgICAgICAgICBkcm9wZG93bjoge1xyXG4gICAgICAgICAgICAgICAgICAgIG1heEl0ZW1zOiAyMCwgICAgICAgICAgIC8vIDwtIG1peHVtdW0gYWxsb3dlZCByZW5kZXJlZCBzdWdnZXN0aW9uc1xyXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzbmFtZTogXCJ0YWdpZnlfX2lubGluZV9fc3VnZ2VzdGlvbnNcIiwgLy8gPC0gY3VzdG9tIGNsYXNzbmFtZSBmb3IgdGhpcyBkcm9wZG93biwgc28gaXQgY291bGQgYmUgdGFyZ2V0ZWRcclxuICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiAwLCAgICAgICAgICAgICAvLyA8LSBzaG93IHN1Z2dlc3Rpb25zIG9uIGZvY3VzXHJcbiAgICAgICAgICAgICAgICAgICAgY2xvc2VPblNlbGVjdDogZmFsc2UgICAgLy8gPC0gZG8gbm90IGhpZGUgdGhlIHN1Z2dlc3Rpb25zIGRyb3Bkb3duIG9uY2UgYW4gaXRlbSBoYXMgYmVlbiBzZWxlY3RlZFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBJbml0IGZvcm0gcmVwZWF0ZXIgLS0tIG1vcmUgaW5mbzogaHR0cHM6Ly9naXRodWIuY29tL0R1YkZyaWVuZC9qcXVlcnkucmVwZWF0ZXJcclxuICAgIGNvbnN0IGluaXRGb3JtUmVwZWF0ZXIgPSAoKSA9PiB7XHJcbiAgICAgICAgJCgnI2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9vcHRpb25zJykucmVwZWF0ZXIoe1xyXG4gICAgICAgICAgICBpbml0RW1wdHk6IGZhbHNlLFxyXG5cclxuICAgICAgICAgICAgZGVmYXVsdFZhbHVlczoge1xyXG4gICAgICAgICAgICAgICAgJ3RleHQtaW5wdXQnOiAnZm9vJ1xyXG4gICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgc2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5zbGlkZURvd24oKTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBJbml0IHNlbGVjdDIgb24gbmV3IHJlcGVhdGVkIGl0ZW1zXHJcbiAgICAgICAgICAgICAgICBpbml0Q29uZGl0aW9uc1NlbGVjdDIoKTtcclxuICAgICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAgIGhpZGU6IGZ1bmN0aW9uIChkZWxldGVFbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnNsaWRlVXAoZGVsZXRlRWxlbWVudCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBJbml0IGNvbmRpdGlvbiBzZWxlY3QyXHJcbiAgICBjb25zdCBpbml0Q29uZGl0aW9uc1NlbGVjdDIgPSAoKSA9PiB7XHJcbiAgICAgICAgLy8gVG5pdCBuZXcgcmVwZWF0aW5nIGNvbmRpdGlvbiB0eXBlc1xyXG4gICAgICAgIGNvbnN0IGFsbENvbmRpdGlvblR5cGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEta3QtZWNvbW1lcmNlLWNhdGFsb2ctYWRkLXByb2R1Y3Q9XCJwcm9kdWN0X29wdGlvblwiXScpO1xyXG4gICAgICAgIGFsbENvbmRpdGlvblR5cGVzLmZvckVhY2godHlwZSA9PiB7XHJcbiAgICAgICAgICAgIGlmICgkKHR5cGUpLmhhc0NsYXNzKFwic2VsZWN0Mi1oaWRkZW4tYWNjZXNzaWJsZVwiKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCh0eXBlKS5zZWxlY3QyKHtcclxuICAgICAgICAgICAgICAgICAgICBtaW5pbXVtUmVzdWx0c0ZvclNlYXJjaDogLTFcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8vIEluaXQgbm9VSXNsaWRlclxyXG4gICAgY29uc3QgaW5pdFNsaWRlciA9ICgpID0+IHtcclxuICAgICAgICB2YXIgc2xpZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNrdF9lY29tbWVyY2VfYWRkX3Byb2R1Y3RfZGlzY291bnRfc2xpZGVyXCIpO1xyXG4gICAgICAgIHZhciB2YWx1ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIja3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X2Rpc2NvdW50X2xhYmVsXCIpO1xyXG5cclxuICAgICAgICBub1VpU2xpZGVyLmNyZWF0ZShzbGlkZXIsIHtcclxuICAgICAgICAgICAgc3RhcnQ6IFsxMF0sXHJcbiAgICAgICAgICAgIGNvbm5lY3Q6IHRydWUsXHJcbiAgICAgICAgICAgIHJhbmdlOiB7XHJcbiAgICAgICAgICAgICAgICBcIm1pblwiOiAxLFxyXG4gICAgICAgICAgICAgICAgXCJtYXhcIjogMTAwXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgc2xpZGVyLm5vVWlTbGlkZXIub24oXCJ1cGRhdGVcIiwgZnVuY3Rpb24gKHZhbHVlcywgaGFuZGxlKSB7XHJcbiAgICAgICAgICAgIHZhbHVlLmlubmVySFRNTCA9IE1hdGgucm91bmQodmFsdWVzW2hhbmRsZV0pO1xyXG4gICAgICAgICAgICBpZiAoaGFuZGxlKSB7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZS5pbm5lckhUTUwgPSBNYXRoLnJvdW5kKHZhbHVlc1toYW5kbGVdKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEluaXQgRHJvcHpvbmVKUyAtLS0gbW9yZSBpbmZvOlxyXG4gICAgY29uc3QgaW5pdERyb3B6b25lID0gKCkgPT4ge1xyXG4gICAgICAgIHZhciBteURyb3B6b25lID0gbmV3IERyb3B6b25lKFwiI2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9tZWRpYVwiLCB7XHJcbiAgICAgICAgICAgIHVybDogXCJodHRwczovL2tlZW50aGVtZXMuY29tL3NjcmlwdHMvdm9pZC5waHBcIiwgLy8gU2V0IHRoZSB1cmwgZm9yIHlvdXIgdXBsb2FkIHNjcmlwdCBsb2NhdGlvblxyXG4gICAgICAgICAgICBwYXJhbU5hbWU6IFwiZmlsZVwiLCAvLyBUaGUgbmFtZSB0aGF0IHdpbGwgYmUgdXNlZCB0byB0cmFuc2ZlciB0aGUgZmlsZVxyXG4gICAgICAgICAgICBtYXhGaWxlczogMTAsXHJcbiAgICAgICAgICAgIG1heEZpbGVzaXplOiAxMCwgLy8gTUJcclxuICAgICAgICAgICAgYWRkUmVtb3ZlTGlua3M6IHRydWUsXHJcbiAgICAgICAgICAgIGFjY2VwdDogZnVuY3Rpb24gKGZpbGUsIGRvbmUpIHtcclxuICAgICAgICAgICAgICAgIGlmIChmaWxlLm5hbWUgPT0gXCJ3b3cuanBnXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICBkb25lKFwiTmFoYSwgeW91IGRvbid0LlwiKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZG9uZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gSGFuZGxlIGRpc2NvdW50IG9wdGlvbnNcclxuICAgIGNvbnN0IGhhbmRsZURpc2NvdW50ID0gKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGRpc2NvdW50T3B0aW9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W25hbWU9XCJkaXNjb3VudF9vcHRpb25cIl0nKTtcclxuICAgICAgICBjb25zdCBwZXJjZW50YWdlRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X2Rpc2NvdW50X3BlcmNlbnRhZ2UnKTtcclxuICAgICAgICBjb25zdCBmaXhlZEVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9kaXNjb3VudF9maXhlZCcpO1xyXG5cclxuICAgICAgICBkaXNjb3VudE9wdGlvbnMuZm9yRWFjaChvcHRpb24gPT4ge1xyXG4gICAgICAgICAgICBvcHRpb24uYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGUudGFyZ2V0LnZhbHVlO1xyXG5cclxuICAgICAgICAgICAgICAgIHN3aXRjaCAodmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICcyJzoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwZXJjZW50YWdlRWwuY2xhc3NMaXN0LnJlbW92ZSgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpeGVkRWwuY2xhc3NMaXN0LmFkZCgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBjYXNlICczJzoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwZXJjZW50YWdlRWwuY2xhc3NMaXN0LmFkZCgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpeGVkRWwuY2xhc3NMaXN0LnJlbW92ZSgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBlcmNlbnRhZ2VFbC5jbGFzc0xpc3QuYWRkKCdkLW5vbmUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZml4ZWRFbC5jbGFzc0xpc3QuYWRkKCdkLW5vbmUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBTaGlwcGluZyBvcHRpb24gaGFuZGxlclxyXG4gICAgY29uc3QgaGFuZGxlU2hpcHBpbmcgPSAoKSA9PiB7XHJcbiAgICAgICAgY29uc3Qgc2hpcHBpbmdPcHRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X3NoaXBwaW5nX2NoZWNrYm94Jyk7XHJcbiAgICAgICAgY29uc3Qgc2hpcHBpbmdGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9zaGlwcGluZycpO1xyXG5cclxuICAgICAgICBzaGlwcGluZ09wdGlvbi5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBlID0+IHtcclxuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBlLnRhcmdldC5jaGVja2VkO1xyXG5cclxuICAgICAgICAgICAgaWYgKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICBzaGlwcGluZ0Zvcm0uY2xhc3NMaXN0LnJlbW92ZSgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBzaGlwcGluZ0Zvcm0uY2xhc3NMaXN0LmFkZCgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBDYXRlZ29yeSBzdGF0dXMgaGFuZGxlclxyXG4gICAgY29uc3QgaGFuZGxlU3RhdHVzID0gKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHRhcmdldCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdrdF9lY29tbWVyY2VfYWRkX3Byb2R1Y3Rfc3RhdHVzJyk7XHJcbiAgICAgICAgY29uc3Qgc2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9zdGF0dXNfc2VsZWN0Jyk7XHJcbiAgICAgICAgY29uc3Qgc3RhdHVzQ2xhc3NlcyA9IFsnYmctc3VjY2VzcycsICdiZy13YXJuaW5nJywgJ2JnLWRhbmdlciddO1xyXG5cclxuICAgICAgICAkKHNlbGVjdCkub24oJ2NoYW5nZScsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZS50YXJnZXQudmFsdWU7XHJcblxyXG4gICAgICAgICAgICBzd2l0Y2ggKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwicHVibGlzaGVkXCI6IHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSguLi5zdGF0dXNDbGFzc2VzKTtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LmFkZCgnYmctc3VjY2VzcycpO1xyXG4gICAgICAgICAgICAgICAgICAgIGhpZGVEYXRlcGlja2VyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwic2NoZWR1bGVkXCI6IHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSguLi5zdGF0dXNDbGFzc2VzKTtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LmFkZCgnYmctd2FybmluZycpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNob3dEYXRlcGlja2VyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiaW5hY3RpdmVcIjoge1xyXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKC4uLnN0YXR1c0NsYXNzZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldC5jbGFzc0xpc3QuYWRkKCdiZy1kYW5nZXInKTtcclxuICAgICAgICAgICAgICAgICAgICBoaWRlRGF0ZXBpY2tlcigpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY2FzZSBcImRyYWZ0XCI6IHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSguLi5zdGF0dXNDbGFzc2VzKTtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LmFkZCgnYmctcHJpbWFyeScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGhpZGVEYXRlcGlja2VyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG5cclxuICAgICAgICAvLyBIYW5kbGUgZGF0ZXBpY2tlclxyXG4gICAgICAgIGNvbnN0IGRhdGVwaWNrZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X3N0YXR1c19kYXRlcGlja2VyJyk7XHJcblxyXG4gICAgICAgIC8vIEluaXQgZmxhdHBpY2tyIC0tLSBtb3JlIGluZm86IGh0dHBzOi8vZmxhdHBpY2tyLmpzLm9yZy9cclxuICAgICAgICAkKCcja3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X3N0YXR1c19kYXRlcGlja2VyJykuZmxhdHBpY2tyKHtcclxuICAgICAgICAgICAgZW5hYmxlVGltZTogdHJ1ZSxcclxuICAgICAgICAgICAgZGF0ZUZvcm1hdDogXCJZLW0tZCBIOmlcIixcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgY29uc3Qgc2hvd0RhdGVwaWNrZXIgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGRhdGVwaWNrZXIucGFyZW50Tm9kZS5jbGFzc0xpc3QucmVtb3ZlKCdkLW5vbmUnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IGhpZGVEYXRlcGlja2VyID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBkYXRlcGlja2VyLnBhcmVudE5vZGUuY2xhc3NMaXN0LmFkZCgnZC1ub25lJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIENvbmRpdGlvbiB0eXBlIGhhbmRsZXJcclxuICAgIGNvbnN0IGhhbmRsZUNvbmRpdGlvbnMgPSAoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgYWxsQ29uZGl0aW9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tuYW1lPVwibWV0aG9kXCJdW3R5cGU9XCJyYWRpb1wiXScpO1xyXG4gICAgICAgIGNvbnN0IGNvbmRpdGlvbk1hdGNoID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWNvbW1lcmNlLWNhdGFsb2ctYWRkLWNhdGVnb3J5PVwiYXV0by1vcHRpb25zXCJdJyk7XHJcbiAgICAgICAgYWxsQ29uZGl0aW9ucy5mb3JFYWNoKHJhZGlvID0+IHtcclxuICAgICAgICAgICAgcmFkaW8uYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZS50YXJnZXQudmFsdWUgPT09ICcxJykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbmRpdGlvbk1hdGNoLmNsYXNzTGlzdC5yZW1vdmUoJ2Qtbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25kaXRpb25NYXRjaC5jbGFzc0xpc3QuYWRkKCdkLW5vbmUnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICAvLyBTdWJtaXQgZm9ybSBoYW5kbGVyXHJcbiAgICBjb25zdCBoYW5kbGVTdWJtaXQgPSAoKSA9PiB7XHJcbiAgICAgICAgLy8gRGVmaW5lIHZhcmlhYmxlc1xyXG4gICAgICAgIGxldCB2YWxpZGF0b3I7XHJcblxyXG4gICAgICAgIC8vIEdldCBlbGVtZW50c1xyXG4gICAgICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X2Zvcm0nKTtcclxuICAgICAgICBjb25zdCBzdWJtaXRCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X3N1Ym1pdCcpO1xyXG5cclxuICAgICAgICAvLyBJbml0IGZvcm0gdmFsaWRhdGlvbiBydWxlcy4gRm9yIG1vcmUgaW5mbyBjaGVjayB0aGUgRm9ybVZhbGlkYXRpb24gcGx1Z2luJ3Mgb2ZmaWNpYWwgZG9jdW1lbnRhdGlvbjpodHRwczovL2Zvcm12YWxpZGF0aW9uLmlvL1xyXG4gICAgICAgIHZhbGlkYXRvciA9IEZvcm1WYWxpZGF0aW9uLmZvcm1WYWxpZGF0aW9uKFxyXG4gICAgICAgICAgICBmb3JtLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBmaWVsZHM6IHtcclxuICAgICAgICAgICAgICAgICAgICAncHJvZHVjdF9uYW1lJzoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RFbXB0eToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdQcm9kdWN0IG5hbWUgaXMgcmVxdWlyZWQnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICdza3UnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdEVtcHR5OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ1NLVSBpcyByZXF1aXJlZCdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgJ3NrdSc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90RW1wdHk6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnUHJvZHVjdCBiYXJjb2RlIGlzIHJlcXVpcmVkJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAnc2hlbGYnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdEVtcHR5OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ1NoZWxmIHF1YW50aXR5IGlzIHJlcXVpcmVkJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAncHJpY2UnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdEVtcHR5OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ1Byb2R1Y3QgYmFzZSBwcmljZSBpcyByZXF1aXJlZCdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgJ3RheCc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90RW1wdHk6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnUHJvZHVjdCB0YXggY2xhc3MgaXMgcmVxdWlyZWQnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgcGx1Z2luczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHRyaWdnZXI6IG5ldyBGb3JtVmFsaWRhdGlvbi5wbHVnaW5zLlRyaWdnZXIoKSxcclxuICAgICAgICAgICAgICAgICAgICBib290c3RyYXA6IG5ldyBGb3JtVmFsaWRhdGlvbi5wbHVnaW5zLkJvb3RzdHJhcDUoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByb3dTZWxlY3RvcjogJy5mdi1yb3cnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVJbnZhbGlkQ2xhc3M6ICcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVWYWxpZENsYXNzOiAnJ1xyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICApO1xyXG5cclxuICAgICAgICAvLyBIYW5kbGUgc3VibWl0IGJ1dHRvblxyXG4gICAgICAgIHN1Ym1pdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgICAgICAgICAvLyBWYWxpZGF0ZSBmb3JtIGJlZm9yZSBzdWJtaXRcclxuICAgICAgICAgICAgaWYgKHZhbGlkYXRvcikge1xyXG4gICAgICAgICAgICAgICAgdmFsaWRhdG9yLnZhbGlkYXRlKCkudGhlbihmdW5jdGlvbiAoc3RhdHVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3ZhbGlkYXRlZCEnKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXR1cyA9PSAnVmFsaWQnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1Ym1pdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2RhdGEta3QtaW5kaWNhdG9yJywgJ29uJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBEaXNhYmxlIHN1Ym1pdCBidXR0b24gd2hpbHN0IGxvYWRpbmdcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VibWl0QnV0dG9uLnJlbW92ZUF0dHJpYnV0ZSgnZGF0YS1rdC1pbmRpY2F0b3InKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTd2FsLmZpcmUoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IFwiRm9ybSBoYXMgYmVlbiBzdWNjZXNzZnVsbHkgc3VibWl0dGVkIVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb246IFwic3VjY2Vzc1wiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ1dHRvbnNTdHlsaW5nOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogXCJPaywgZ290IGl0IVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1c3RvbUNsYXNzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpcm1CdXR0b246IFwiYnRuIGJ0bi1wcmltYXJ5XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0LmlzQ29uZmlybWVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEVuYWJsZSBzdWJtaXQgYnV0dG9uIGFmdGVyIGxvYWRpbmdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBSZWRpcmVjdCB0byBjdXN0b21lcnMgbGlzdCBwYWdlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbiA9IGZvcm0uZ2V0QXR0cmlidXRlKFwiZGF0YS1rdC1yZWRpcmVjdFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgMjAwMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgU3dhbC5maXJlKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGh0bWw6IFwiU29ycnksIGxvb2tzIGxpa2UgdGhlcmUgYXJlIHNvbWUgZXJyb3JzIGRldGVjdGVkLCBwbGVhc2UgdHJ5IGFnYWluLiA8YnIvPjxici8+UGxlYXNlIG5vdGUgdGhhdCB0aGVyZSBtYXkgYmUgZXJyb3JzIGluIHRoZSA8c3Ryb25nPkdlbmVyYWw8L3N0cm9uZz4gb3IgPHN0cm9uZz5BZHZhbmNlZDwvc3Ryb25nPiB0YWJzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uOiBcImVycm9yXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBidXR0b25zU3R5bGluZzogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogXCJPaywgZ290IGl0IVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VzdG9tQ2xhc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uOiBcImJ0biBidG4tcHJpbWFyeVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICAvLyBQdWJsaWMgbWV0aG9kc1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIC8vIEluaXQgZm9ybXNcclxuICAgICAgICAgICAgaW5pdFF1aWxsKCk7XHJcbiAgICAgICAgICAgIGluaXRUYWdpZnkoKTtcclxuICAgICAgICAgICAgaW5pdFNsaWRlcigpO1xyXG4gICAgICAgICAgICBpbml0Rm9ybVJlcGVhdGVyKCk7XHJcbiAgICAgICAgICAgIGluaXREcm9wem9uZSgpO1xyXG4gICAgICAgICAgICBpbml0Q29uZGl0aW9uc1NlbGVjdDIoKTtcclxuXHJcbiAgICAgICAgICAgIC8vIEhhbmRsZSBmb3Jtc1xyXG4gICAgICAgICAgICBoYW5kbGVTdGF0dXMoKTtcclxuICAgICAgICAgICAgaGFuZGxlQ29uZGl0aW9ucygpO1xyXG4gICAgICAgICAgICBoYW5kbGVEaXNjb3VudCgpO1xyXG4gICAgICAgICAgICBoYW5kbGVTaGlwcGluZygpO1xyXG4gICAgICAgICAgICBoYW5kbGVTdWJtaXQoKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59KCk7XHJcblxyXG4vLyBPbiBkb2N1bWVudCByZWFkeVxyXG5LVFV0aWwub25ET01Db250ZW50TG9hZGVkKGZ1bmN0aW9uICgpIHtcclxuICAgIEtUQXBwRWNvbW1lcmNlU2F2ZVByb2R1Y3QuaW5pdCgpO1xyXG59KTtcclxuIl0sIm5hbWVzIjpbIl90eXBlb2YiLCJvIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIl9kZWZpbmVQcm9wZXJ0eSIsImUiLCJyIiwidCIsIl90b1Byb3BlcnR5S2V5IiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImkiLCJfdG9QcmltaXRpdmUiLCJ0b1ByaW1pdGl2ZSIsImNhbGwiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJOdW1iZXIiLCJLVEFwcEVjb21tZXJjZVNhdmVQcm9kdWN0IiwiaW5pdFF1aWxsIiwiZWxlbWVudHMiLCJmb3JFYWNoIiwiZWxlbWVudCIsInF1aWxsIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiUXVpbGwiLCJtb2R1bGVzIiwidG9vbGJhciIsImhlYWRlciIsInBsYWNlaG9sZGVyIiwidGhlbWUiLCJpbml0VGFnaWZ5IiwidGFnaWZ5IiwiVGFnaWZ5Iiwid2hpdGVsaXN0IiwiZHJvcGRvd24iLCJtYXhJdGVtcyIsImNsYXNzbmFtZSIsImVuYWJsZWQiLCJjbG9zZU9uU2VsZWN0IiwiaW5pdEZvcm1SZXBlYXRlciIsIiQiLCJyZXBlYXRlciIsImluaXRFbXB0eSIsImRlZmF1bHRWYWx1ZXMiLCJzaG93Iiwic2xpZGVEb3duIiwiaW5pdENvbmRpdGlvbnNTZWxlY3QyIiwiaGlkZSIsImRlbGV0ZUVsZW1lbnQiLCJzbGlkZVVwIiwiYWxsQ29uZGl0aW9uVHlwZXMiLCJxdWVyeVNlbGVjdG9yQWxsIiwidHlwZSIsImhhc0NsYXNzIiwic2VsZWN0MiIsIm1pbmltdW1SZXN1bHRzRm9yU2VhcmNoIiwiaW5pdFNsaWRlciIsInNsaWRlciIsIm5vVWlTbGlkZXIiLCJjcmVhdGUiLCJzdGFydCIsImNvbm5lY3QiLCJyYW5nZSIsIm9uIiwidmFsdWVzIiwiaGFuZGxlIiwiaW5uZXJIVE1MIiwiTWF0aCIsInJvdW5kIiwiaW5pdERyb3B6b25lIiwibXlEcm9wem9uZSIsIkRyb3B6b25lIiwidXJsIiwicGFyYW1OYW1lIiwibWF4RmlsZXMiLCJtYXhGaWxlc2l6ZSIsImFkZFJlbW92ZUxpbmtzIiwiYWNjZXB0IiwiZmlsZSIsImRvbmUiLCJuYW1lIiwiaGFuZGxlRGlzY291bnQiLCJkaXNjb3VudE9wdGlvbnMiLCJwZXJjZW50YWdlRWwiLCJnZXRFbGVtZW50QnlJZCIsImZpeGVkRWwiLCJvcHRpb24iLCJhZGRFdmVudExpc3RlbmVyIiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiYWRkIiwiaGFuZGxlU2hpcHBpbmciLCJzaGlwcGluZ09wdGlvbiIsInNoaXBwaW5nRm9ybSIsImNoZWNrZWQiLCJoYW5kbGVTdGF0dXMiLCJzZWxlY3QiLCJzdGF0dXNDbGFzc2VzIiwiX3RhcmdldCRjbGFzc0xpc3QiLCJhcHBseSIsImhpZGVEYXRlcGlja2VyIiwiX3RhcmdldCRjbGFzc0xpc3QyIiwic2hvd0RhdGVwaWNrZXIiLCJfdGFyZ2V0JGNsYXNzTGlzdDMiLCJfdGFyZ2V0JGNsYXNzTGlzdDQiLCJkYXRlcGlja2VyIiwiZmxhdHBpY2tyIiwiZW5hYmxlVGltZSIsImRhdGVGb3JtYXQiLCJwYXJlbnROb2RlIiwiaGFuZGxlQ29uZGl0aW9ucyIsImFsbENvbmRpdGlvbnMiLCJjb25kaXRpb25NYXRjaCIsInJhZGlvIiwiaGFuZGxlU3VibWl0IiwidmFsaWRhdG9yIiwiZm9ybSIsInN1Ym1pdEJ1dHRvbiIsIkZvcm1WYWxpZGF0aW9uIiwiZm9ybVZhbGlkYXRpb24iLCJmaWVsZHMiLCJ2YWxpZGF0b3JzIiwibm90RW1wdHkiLCJtZXNzYWdlIiwicGx1Z2lucyIsInRyaWdnZXIiLCJUcmlnZ2VyIiwiYm9vdHN0cmFwIiwiQm9vdHN0cmFwNSIsInJvd1NlbGVjdG9yIiwiZWxlSW52YWxpZENsYXNzIiwiZWxlVmFsaWRDbGFzcyIsInByZXZlbnREZWZhdWx0IiwidmFsaWRhdGUiLCJ0aGVuIiwic3RhdHVzIiwiY29uc29sZSIsImxvZyIsInNldEF0dHJpYnV0ZSIsImRpc2FibGVkIiwic2V0VGltZW91dCIsInJlbW92ZUF0dHJpYnV0ZSIsIlN3YWwiLCJmaXJlIiwidGV4dCIsImljb24iLCJidXR0b25zU3R5bGluZyIsImNvbmZpcm1CdXR0b25UZXh0IiwiY3VzdG9tQ2xhc3MiLCJjb25maXJtQnV0dG9uIiwicmVzdWx0IiwiaXNDb25maXJtZWQiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImdldEF0dHJpYnV0ZSIsImh0bWwiLCJpbml0IiwiS1RVdGlsIiwib25ET01Db250ZW50TG9hZGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/ecommerce/catalog/save-product.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/apps/ecommerce/catalog/save-product.js"]();
/******/ 	
/******/ })()
;