/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/apps/user-management/users/view/update-details.js":
/*!*******************************************************************************************!*\
  !*** ./resources/assets/core/js/custom/apps/user-management/users/view/update-details.js ***!
  \*******************************************************************************************/
/***/ (() => {

eval("\n\n// Class definition\nvar KTUsersUpdateDetails = function () {\n  // Shared variables\n  var element = document.getElementById('kt_modal_update_details');\n  var form = element.querySelector('#kt_modal_update_user_form');\n  var modal = new bootstrap.Modal(element);\n\n  // Init add schedule modal\n  var initUpdateDetails = function initUpdateDetails() {\n    // Close button handler\n    var closeButton = element.querySelector('[data-kt-users-modal-action=\"close\"]');\n    closeButton.addEventListener('click', function (e) {\n      e.preventDefault();\n      Swal.fire({\n        text: \"Are you sure you would like to cancel?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        buttonsStyling: false,\n        confirmButtonText: \"Yes, cancel it!\",\n        cancelButtonText: \"No, return\",\n        customClass: {\n          confirmButton: \"btn btn-primary\",\n          cancelButton: \"btn btn-active-light\"\n        }\n      }).then(function (result) {\n        if (result.value) {\n          form.reset(); // Reset form\n          modal.hide(); // Hide modal\n        } else if (result.dismiss === 'cancel') {\n          Swal.fire({\n            text: \"Your form has not been cancelled!.\",\n            icon: \"error\",\n            buttonsStyling: false,\n            confirmButtonText: \"Weiter!\",\n            customClass: {\n              confirmButton: \"btn btn-primary\"\n            }\n          });\n        }\n      });\n    });\n\n    // Cancel button handler\n    var cancelButton = element.querySelector('[data-kt-users-modal-action=\"cancel\"]');\n    cancelButton.addEventListener('click', function (e) {\n      e.preventDefault();\n      Swal.fire({\n        text: \"Are you sure you would like to cancel?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        buttonsStyling: false,\n        confirmButtonText: \"Yes, cancel it!\",\n        cancelButtonText: \"No, return\",\n        customClass: {\n          confirmButton: \"btn btn-primary\",\n          cancelButton: \"btn btn-active-light\"\n        }\n      }).then(function (result) {\n        if (result.value) {\n          form.reset(); // Reset form\n          modal.hide(); // Hide modal\n        } else if (result.dismiss === 'cancel') {\n          Swal.fire({\n            text: \"Your form has not been cancelled!.\",\n            icon: \"error\",\n            buttonsStyling: false,\n            confirmButtonText: \"Weiter!\",\n            customClass: {\n              confirmButton: \"btn btn-primary\"\n            }\n          });\n        }\n      });\n    });\n\n    // Submit button handler\n    var submitButton = element.querySelector('[data-kt-users-modal-action=\"submit\"]');\n    submitButton.addEventListener('click', function (e) {\n      // Prevent default button action\n      e.preventDefault();\n\n      // Show loading indication\n      submitButton.setAttribute('data-kt-indicator', 'on');\n\n      // Disable button to avoid multiple click\n      submitButton.disabled = true;\n\n      // Simulate form submission. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n      setTimeout(function () {\n        // Remove loading indication\n        submitButton.removeAttribute('data-kt-indicator');\n\n        // Enable button\n        submitButton.disabled = false;\n\n        // Show popup confirmation\n        Swal.fire({\n          text: \"Form has been successfully submitted!\",\n          icon: \"success\",\n          buttonsStyling: false,\n          confirmButtonText: \"Weiter!\",\n          customClass: {\n            confirmButton: \"btn btn-primary\"\n          }\n        }).then(function (result) {\n          if (result.isConfirmed) {\n            modal.hide();\n          }\n        });\n\n        //form.submit(); // Submit form\n      }, 2000);\n    });\n  };\n  return {\n    // Public functions\n    init: function init() {\n      initUpdateDetails();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTUsersUpdateDetails.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/user-management/users/view/update-details.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/apps/user-management/users/view/update-details.js"]();
/******/ 	
/******/ })()
;