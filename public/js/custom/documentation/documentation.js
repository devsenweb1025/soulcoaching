/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/documentation/documentation.js":
/*!************************************************************************!*\
  !*** ./resources/assets/core/js/custom/documentation/documentation.js ***!
  \************************************************************************/
/***/ (() => {

eval("\n\nvar KTLayoutDocumentation = function () {\n  var menuWrapper;\n  var keeniconsListing;\n  var selectedIconName;\n  var selectedIconCode;\n  var initInstance = function initInstance(element) {\n    var elements = element;\n    if (typeof elements === 'undefined') {\n      elements = document.querySelectorAll('.highlight');\n    }\n    if (elements && elements.length > 0) {\n      for (var i = 0; i < elements.length; ++i) {\n        var highlight = elements[i];\n        var copy = highlight.querySelector('.highlight-copy');\n        if (copy) {\n          var clipboard = new ClipboardJS(copy, {\n            target: function target(trigger) {\n              var highlight = trigger.closest('.highlight');\n              var el = highlight.querySelector('.tab-pane.active');\n              if (el == null) {\n                el = highlight.querySelector('.highlight-code');\n              }\n              return el;\n            }\n          });\n          clipboard.on('success', function (e) {\n            var caption = e.trigger.innerHTML;\n            e.trigger.innerHTML = 'copied';\n            e.clearSelection();\n            setTimeout(function () {\n              e.trigger.innerHTML = caption;\n            }, 2000);\n          });\n        }\n      }\n    }\n  };\n  var handleMenuScroll = function handleMenuScroll() {\n    var menuActiveItem = menuWrapper.querySelector(\".menu-link.active\");\n    if (!menuActiveItem) {\n      return;\n    }\n    if (KTUtil.isVisibleInContainer(menuActiveItem, menuWrapper) === true) {\n      return;\n    }\n    menuWrapper.scroll({\n      top: KTUtil.getRelativeTopPosition(menuActiveItem, menuWrapper),\n      behavior: 'smooth'\n    });\n  };\n  var keeniconsStyleToggle = function keeniconsStyleToggle() {\n    var toggleButtons = [].slice.call(document.querySelectorAll('[data-kt-keenicons-style-toggle=\"true\"]'));\n    function escapeHtml(text) {\n      if (text == null) return '';\n      return String(text).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#039;');\n    }\n    KTUtil.on(document.body, '[data-kt-keenicons-style-toggle=\"true\"]:checked', 'click', function (e) {\n      var style = this.value;\n      keeniconsListing.classList.remove('keenicons-solid');\n      keeniconsListing.classList.remove('keenicons-duotone');\n      keeniconsListing.classList.remove('keenicons-outline');\n      keeniconsListing.classList.add('keenicons-' + style);\n    });\n    KTUtil.on(document.body, '[data-kt-icon-use=\"true\"]', 'click', function (e) {\n      var style = document.querySelector('[data-kt-keenicons-style-toggle=\"true\"]:checked').value;\n      var previewEl = this.closest('[data-kt-icon-preview=\"true\"]');\n      var iconNameEl = previewEl.querySelector('[data-kt-icon-name=\"true\"]');\n      selectedIconName = iconNameEl.innerHTML;\n      if (style === 'duotone') {\n        var paths = parseInt(this.getAttribute('data-kt-icon-paths'));\n        selectedIconCode = escapeHtml('<i class=\"ki-duotone ki-' + selectedIconName + '\">');\n        for (var i = 1; i <= paths; i++) {\n          selectedIconCode += escapeHtml('\\n <i class=\"path' + i + '\"></i>');\n        }\n        selectedIconCode += escapeHtml('\\n</i>');\n      } else {\n        selectedIconCode = escapeHtml('<i class=\"ki-' + style + ' ki-' + selectedIconName + '\"></i>');\n      }\n      var myModalEl = new bootstrap.Modal('#kt_keenicons_use');\n      myModalEl.show();\n    });\n    var myModalEl = document.getElementById('kt_keenicons_use');\n    myModalEl.addEventListener('show.bs.modal', function (event) {\n      document.querySelector('#kt_keenicons_use_title').innerHTML = selectedIconName;\n      document.querySelector('#kt_keenicons_use_code').innerHTML = selectedIconCode;\n    });\n\n    // Copy\n  };\n  var keeniconsHandleCodeCopy = function keeniconsHandleCodeCopy() {\n    // Select elements\n    var target = document.getElementById('kt_keenicons_use_code');\n    var button = document.getElementById('kt_keenicons_use_code_copy');\n\n    // Init clipboard -- for more info, please read the offical documentation: https://clipboardjs.com/\n    var clipboard = new ClipboardJS(button, {\n      target: target,\n      text: function text(target) {\n        return target.innerText;\n      }\n    });\n\n    // Success action handler\n    clipboard.on('success', function (e) {\n      button.classList.add('active');\n      button.querySelector('.ki-copy').classList.add('d-none');\n      button.querySelector('.ki-check').classList.remove('d-none');\n      setTimeout(function () {\n        button.classList.remove('active');\n        button.querySelector('.ki-copy').classList.remove('d-none');\n        button.querySelector('.ki-check').classList.add('d-none');\n      }, 3000);\n    });\n  };\n  return {\n    init: function init(element) {\n      menuWrapper = document.querySelector('#kt_docs_aside_menu_wrapper');\n      keeniconsListing = document.querySelector('#kt_docs_keenicons_listing');\n      initInstance(element);\n      if (menuWrapper) {\n        handleMenuScroll();\n      }\n      if (keeniconsListing) {\n        keeniconsStyleToggle();\n        keeniconsHandleCodeCopy();\n      }\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTLayoutDocumentation.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/documentation.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/documentation/documentation.js"]();
/******/ 	
/******/ })()
;