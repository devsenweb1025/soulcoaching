/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/utilities/modals/upgrade-plan.js":
/*!**************************************************************************!*\
  !*** ./resources/assets/core/js/custom/utilities/modals/upgrade-plan.js ***!
  \**************************************************************************/
/***/ (() => {

eval("\n\n// Class definition\nvar KTModalUpgradePlan = function () {\n  // Private variables\n  var modal;\n  var planPeriodMonthButton;\n  var planPeriodAnnualButton;\n  var planUpgradeButton;\n\n  // Private functions\n  var changePlanPrices = function changePlanPrices(type) {\n    var items = [].slice.call(modal.querySelectorAll('[data-kt-plan-price-month]'));\n    items.map(function (item) {\n      var monthPrice = item.getAttribute('data-kt-plan-price-month');\n      var annualPrice = item.getAttribute('data-kt-plan-price-annual');\n      if (type === 'month') {\n        item.innerHTML = monthPrice;\n      } else if (type === 'annual') {\n        item.innerHTML = annualPrice;\n      }\n    });\n  };\n  var handlePlanPeriodSelection = function handlePlanPeriodSelection() {\n    // Handle period change\n    planPeriodMonthButton.addEventListener('click', function (e) {\n      e.preventDefault();\n      planPeriodMonthButton.classList.add('active');\n      planPeriodAnnualButton.classList.remove('active');\n      changePlanPrices('month');\n    });\n    planPeriodAnnualButton.addEventListener('click', function (e) {\n      e.preventDefault();\n      planPeriodMonthButton.classList.remove('active');\n      planPeriodAnnualButton.classList.add('active');\n      changePlanPrices('annual');\n    });\n  };\n  var handlePlanUpgrade = function handlePlanUpgrade() {\n    if (!planUpgradeButton) {\n      return;\n    }\n    planUpgradeButton.addEventListener('click', function (e) {\n      e.preventDefault();\n      var el = this;\n      swal.fire({\n        text: \"Are you sure you would like to upgrade to selected plan ?\",\n        icon: \"warning\",\n        buttonsStyling: false,\n        showDenyButton: true,\n        confirmButtonText: \"Yes\",\n        denyButtonText: 'No',\n        customClass: {\n          confirmButton: \"btn btn-primary\",\n          denyButton: \"btn btn-light-danger\"\n        }\n      }).then(function (result) {\n        if (result.isConfirmed) {\n          el.setAttribute('data-kt-indicator', 'on');\n          el.disabled = true;\n          setTimeout(function () {\n            Swal.fire({\n              text: 'Your subscription plan has been successfully upgraded',\n              icon: 'success',\n              confirmButtonText: \"Ok\",\n              buttonsStyling: false,\n              customClass: {\n                confirmButton: \"btn btn-light-primary\"\n              }\n            }).then(function (result) {\n              bootstrap.Modal.getInstance(modal).hide();\n            });\n          }, 2000);\n        }\n      });\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      // Elements\n      modal = document.querySelector('#kt_modal_upgrade_plan');\n      if (!modal) {\n        return;\n      }\n      planPeriodMonthButton = modal.querySelector('[data-kt-plan=\"month\"]');\n      planPeriodAnnualButton = modal.querySelector('[data-kt-plan=\"annual\"]');\n      planUpgradeButton = document.querySelector('#kt_modal_upgrade_plan_btn');\n\n      // Handlers\n      handlePlanPeriodSelection();\n      handlePlanUpgrade();\n      changePlanPrices();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTModalUpgradePlan.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/utilities/modals/upgrade-plan.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/utilities/modals/upgrade-plan.js"]();
/******/ 	
/******/ })()
;