/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/authentication/reset-password/reset-password.js":
/*!*****************************************************************************************!*\
  !*** ./resources/assets/core/js/custom/authentication/reset-password/reset-password.js ***!
  \*****************************************************************************************/
/***/ (() => {

eval("\n\n// Class Definition\nvar KTAuthResetPassword = function () {\n  // Elements\n  var form;\n  var submitButton;\n  var validator;\n  var handleForm = function handleForm(e) {\n    // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n    validator = FormValidation.formValidation(form, {\n      fields: {\n        'email': {\n          validators: {\n            regexp: {\n              regexp: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n              message: 'Dies ist keine gültige Mailadresse'\n            },\n            notEmpty: {\n              message: 'Mailadresse ist erforderlich'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap: new FormValidation.plugins.Bootstrap5({\n          rowSelector: '.fv-row',\n          eleInvalidClass: '',\n          // comment to enable invalid state icons\n          eleValidClass: '' // comment to enable valid state icons\n        })\n      }\n    });\n    submitButton.addEventListener('click', function (e) {\n      e.preventDefault();\n\n      // Validate form\n      validator.validate().then(function (status) {\n        if (status == 'Valid') {\n          // Show loading indication\n          submitButton.setAttribute('data-kt-indicator', 'on');\n\n          // Disable button to avoid multiple click\n          submitButton.disabled = true;\n\n          // Simulate ajax request\n          setTimeout(function () {\n            // Hide loading indication\n            submitButton.removeAttribute('data-kt-indicator');\n\n            // Enable button\n            submitButton.disabled = false;\n\n            // Show message popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n            Swal.fire({\n              text: \"Ein Link zum Zurücksetzen des Passworts wurde dir per E-Mail gesendet.\",\n              icon: \"success\",\n              buttonsStyling: false,\n              confirmButtonText: \"Weiter!\",\n              customClass: {\n                confirmButton: \"btn btn-primary\"\n              }\n            }).then(function (result) {\n              if (result.isConfirmed) {\n                form.querySelector('[name=\"email\"]').value = \"\";\n                //form.submit();\n\n                var redirectUrl = form.getAttribute('data-kt-redirect-url');\n                if (redirectUrl) {\n                  location.href = redirectUrl;\n                }\n              }\n            });\n          }, 1500);\n        } else {\n          // Show error popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n          Swal.fire({\n            text: \"Es sind Fehler aufgetreten, bitte versuche es erneut.\",\n            icon: \"error\",\n            buttonsStyling: false,\n            confirmButtonText: \"Weiter!\",\n            customClass: {\n              confirmButton: \"btn btn-primary\"\n            }\n          });\n        }\n      });\n    });\n  };\n\n  // Public Functions\n  return {\n    // public functions\n    init: function init() {\n      form = document.querySelector('#kt_password_reset_form');\n      submitButton = document.querySelector('#kt_password_reset_submit');\n      handleForm();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTAuthResetPassword.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/authentication/reset-password/reset-password.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/authentication/reset-password/reset-password.js"]();
/******/ 	
/******/ })()
;